"""adding user

Revision ID: 923189e16fe5
Revises: 6aed49500db9
Create Date: 2025-09-15 16:36:31.897320

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '923189e16fe5'
down_revision: Union[str, None] = '6aed49500db9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('phone_number', sa.String(length=15), nullable=False),
    sa.Column('country_code', sa.String(length=5), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('is_phone_verified', sa.Boolean(), nullable=True),
    sa.Column('otp_secret', sa.String(length=255), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('father_husband_name', sa.String(length=255), nullable=True),
    sa.Column('gender', sa.Enum('male', 'female', 'other', name='gender_enum'), nullable=True),
    sa.Column('date_of_birth', sa.DateTime(), nullable=True),
    sa.Column('profile_photo_url', sa.String(length=500), nullable=True),
    sa.Column('aadhaar_number', sa.String(length=12), nullable=True),
    sa.Column('is_aadhaar_verified', sa.Boolean(), nullable=True),
    sa.Column('aadhaar_linked_mobile', sa.Boolean(), nullable=True),
    sa.Column('pan_number', sa.String(length=10), nullable=True),
    sa.Column('voter_id', sa.String(length=20), nullable=True),
    sa.Column('current_address', sa.Text(), nullable=True),
    sa.Column('current_village', sa.String(length=100), nullable=True),
    sa.Column('current_taluka', sa.String(length=100), nullable=True),
    sa.Column('current_district', sa.String(length=100), nullable=True),
    sa.Column('current_state', sa.String(length=100), nullable=True),
    sa.Column('current_pincode', sa.String(length=10), nullable=True),
    sa.Column('current_gps_lat', sa.Float(), nullable=True),
    sa.Column('current_gps_long', sa.Float(), nullable=True),
    sa.Column('permanent_address', sa.Text(), nullable=True),
    sa.Column('permanent_village', sa.String(length=100), nullable=True),
    sa.Column('permanent_taluka', sa.String(length=100), nullable=True),
    sa.Column('permanent_district', sa.String(length=100), nullable=True),
    sa.Column('permanent_state', sa.String(length=100), nullable=True),
    sa.Column('permanent_pincode', sa.String(length=10), nullable=True),
    sa.Column('total_land_holdings', sa.Float(), nullable=True),
    sa.Column('owned_land_area', sa.Float(), nullable=True),
    sa.Column('leased_land_area', sa.Float(), nullable=True),
    sa.Column('primary_land_type', sa.Enum('IRRIGATED', 'RAINFED', 'SEMI_IRRIGATED', 'HORTICULTURE', 'ORCHARD', name='landtype'), nullable=True),
    sa.Column('primary_soil_type', sa.Enum('ALLUVIAL', 'BLACK', 'RED', 'LATERITE', 'MOUNTAIN', 'DESERT', name='soiltype'), nullable=True),
    sa.Column('has_irrigation_facility', sa.Boolean(), nullable=True),
    sa.Column('irrigation_type', sa.String(length=100), nullable=True),
    sa.Column('bank_account_number', sa.String(length=50), nullable=True),
    sa.Column('bank_name', sa.String(length=100), nullable=True),
    sa.Column('bank_branch', sa.String(length=100), nullable=True),
    sa.Column('bank_ifsc_code', sa.String(length=20), nullable=True),
    sa.Column('is_bank_verified', sa.Boolean(), nullable=True),
    sa.Column('pm_kisan_beneficiary', sa.Boolean(), nullable=True),
    sa.Column('pm_kisan_id', sa.String(length=50), nullable=True),
    sa.Column('soil_health_card_id', sa.String(length=50), nullable=True),
    sa.Column('fasal_bima_policy_number', sa.String(length=50), nullable=True),
    sa.Column('kisan_credit_card_number', sa.String(length=50), nullable=True),
    sa.Column('family_members_count', sa.Integer(), nullable=True),
    sa.Column('dependents_count', sa.Integer(), nullable=True),
    sa.Column('primary_education_level', sa.String(length=50), nullable=True),
    sa.Column('preferred_language', sa.String(length=10), nullable=True),
    sa.Column('notification_enabled', sa.Boolean(), nullable=True),
    sa.Column('sms_alerts_enabled', sa.Boolean(), nullable=True),
    sa.Column('voice_call_enabled', sa.Boolean(), nullable=True),
    sa.Column('role', sa.Enum('FARMER', 'EXPERT', 'ADMIN', name='userrole'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_profile_complete', sa.Boolean(), nullable=True),
    sa.Column('profile_completion_percentage', sa.Integer(), nullable=True),
    sa.Column('verification_status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_profile_update', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('pan_number')
    )
    op.create_index(op.f('ix_users_aadhaar_number'), 'users', ['aadhaar_number'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_phone_number'), 'users', ['phone_number'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_phone_number'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_aadhaar_number'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
